Resources:
    CognitoUserPool:
        Type: AWS::Cognito::UserPool
        Properties:
            UserPoolName: chatapp_userpool
            AdminCreateUserConfig:
                AllowAdminCreateUserOnly: True
            Policies:
                PasswordPolicy:
                    MinimumLength: 8
            AutoVerifiedAttributes:
                - email
    CognitoUserPoolClient:
        Type: AWS::Cognito::UserPoolClient
        Properties:
            ClientName: chatapp_userpool_client
            UserPoolId: !Ref CognitoUserPool
            ExplicitAuthFlows:
                - ALLOW_ADMIN_USER_PASSWORD_AUTH
                - ALLOW_CUSTOM_AUTH
                - ALLOW_USER_SRP_AUTH
                - ALLOW_REFRESH_TOKEN_AUTH
            GenerateSecret: false
            PreventUserExistenceErrors: ENABLED
            ReadAttributes:
                - name
                - email
    ApiGatewayAuthorizer:
        DependsOn:
            - ApiGatewayRestApi
        Type: AWS::ApiGateway::Authorizer
        Properties:
            Name: cognito_auth
            RestApiId: { 'Ref': 'ApiGatewayRestApi' }
            IdentitySource: method.request.header.Authorization
            Type: COGNITO_USER_POOLS
            ProviderARNs:
                - Fn::GetAtt: [CognitoUserPool, Arn]
Outputs:
    UserPoolId:
        Value: !Ref CognitoUserPool
    UserPoolClientId:
        Value: !Ref CognitoUserPoolClient
